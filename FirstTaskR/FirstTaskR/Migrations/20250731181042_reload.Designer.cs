// <auto-generated />
using System;
using FirstTaskR;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstTaskR.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250731181042_reload")]
    partial class reload
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("FirstTaskR.Shared.Data.Tables.Object", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("TEXT");

                    b.Property<int>("type")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("type");

                    b.ToTable("objects");
                });

            modelBuilder.Entity("FirstTaskR.Shared.Data.Tables.ObjectType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("object_types");
                });

            modelBuilder.Entity("FirstTaskR.Shared.Data.Tables.Well", b =>
                {
                    b.Property<int>("well")
                        .HasColumnType("INTEGER");

                    b.Property<int>("cdng")
                        .HasColumnType("INTEGER");

                    b.Property<int>("kust")
                        .HasColumnType("INTEGER");

                    b.Property<int>("mest")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ngdu")
                        .HasColumnType("INTEGER");

                    b.HasKey("well");

                    b.HasIndex("cdng");

                    b.HasIndex("kust");

                    b.HasIndex("mest");

                    b.HasIndex("ngdu");

                    b.ToTable("wells");
                });

            modelBuilder.Entity("FirstTaskR.Shared.Data.Tables.WellDayHistory", b =>
                {
                    b.Property<int>("well")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("date_fact")
                        .HasColumnType("TEXT");

                    b.Property<short>("debit")
                        .HasColumnType("INTEGER");

                    b.Property<float>("ee_consume")
                        .HasPrecision(5, 2)
                        .HasColumnType("REAL");

                    b.Property<float>("expenses")
                        .HasPrecision(4, 3)
                        .HasColumnType("REAL");

                    b.Property<short>("pump_operating")
                        .HasColumnType("INTEGER");

                    b.HasKey("well", "date_fact");

                    b.ToTable("well_day_histories");
                });

            modelBuilder.Entity("FirstTaskR.Shared.Data.Tables.WellDayPlan", b =>
                {
                    b.Property<int>("well")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("date_plan")
                        .HasColumnType("TEXT");

                    b.Property<short>("debit")
                        .HasColumnType("INTEGER");

                    b.Property<float>("ee_consume")
                        .HasPrecision(5, 2)
                        .HasColumnType("REAL");

                    b.Property<float>("expenses")
                        .HasPrecision(4, 3)
                        .HasColumnType("REAL");

                    b.Property<short>("pump_operating")
                        .HasColumnType("INTEGER");

                    b.HasKey("well", "date_plan");

                    b.ToTable("well_day_plans");
                });

            modelBuilder.Entity("FirstTaskR.Shared.Data.Tables.Object", b =>
                {
                    b.HasOne("FirstTaskR.Shared.Data.Tables.ObjectType", "fk_type")
                        .WithMany()
                        .HasForeignKey("type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fk_type");
                });

            modelBuilder.Entity("FirstTaskR.Shared.Data.Tables.Well", b =>
                {
                    b.HasOne("FirstTaskR.Shared.Data.Tables.Object", "fk_cdng")
                        .WithMany()
                        .HasForeignKey("cdng")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstTaskR.Shared.Data.Tables.Object", "fk_kust")
                        .WithMany()
                        .HasForeignKey("kust")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstTaskR.Shared.Data.Tables.Object", "fk_mest")
                        .WithMany()
                        .HasForeignKey("mest")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstTaskR.Shared.Data.Tables.Object", "fk_ngdu")
                        .WithMany()
                        .HasForeignKey("ngdu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstTaskR.Shared.Data.Tables.Object", "fk_well")
                        .WithMany()
                        .HasForeignKey("well")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fk_cdng");

                    b.Navigation("fk_kust");

                    b.Navigation("fk_mest");

                    b.Navigation("fk_ngdu");

                    b.Navigation("fk_well");
                });

            modelBuilder.Entity("FirstTaskR.Shared.Data.Tables.WellDayHistory", b =>
                {
                    b.HasOne("FirstTaskR.Shared.Data.Tables.Object", "fk_well_p")
                        .WithMany()
                        .HasForeignKey("well")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fk_well_p");
                });

            modelBuilder.Entity("FirstTaskR.Shared.Data.Tables.WellDayPlan", b =>
                {
                    b.HasOne("FirstTaskR.Shared.Data.Tables.Object", "fk_well_p")
                        .WithMany()
                        .HasForeignKey("well")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fk_well_p");
                });
#pragma warning restore 612, 618
        }
    }
}
