@page "/table"
@using Microsoft.AspNetCore.Components.Web
@using System.Net.Http.Json
@using Shared.Data.Tables
@using Radzen.Blazor
@rendermode InteractiveWebAssembly
@inject HttpClient httpClient

<h1>Object Types</h1>

@if (isLoading)
{
    <p>Load...</p>
}
else
{
    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var object_type in object_types)
            {
                <tr>
                    <td>@object_type.id</td>
                    <td>@object_type.name</td>
                </tr>
            }
        </tbody>
    </table>
}


<RadzenDropDown Data=@Years
                @bind-Value=@Month
                TValue="string"
                Placeholder="Выберите год"
                Change="@OnFilterChange" />

<RadzenDropDown Data=@Monthes
                @bind-Value=@Year
                TValue="string"
                Placeholder="Выберите месяц"
                Change="@OnFilterChange" />

<RadzenDataGrid Data=@wells
                TItem="Well"
                AllowFiltering="true"
                AllowPaging="true"
                PageSize="10">
    <Columns>
        <RadzenDataGridColumn TItem="Well" Property="id" Title="ID" />
        <RadzenDataGridColumn TItem="Well" Property="name" Title="Название" />
        <RadzenDataGridColumn TItem="Well" Property="fk_type" Title="___" />
    </Columns>
</RadzenDataGrid>

@code {
    private List<ObjectType> object_types = new();
    private List<Shared.Data.Tables.Object> objects = new();
    private List<Well> wells = new();
    private List<WellDayHistory> well_day_histories = new();
    private List<WellDayPlan> well_day_plans = new();

    bool isLoading = true; 
    private string Month { get; set; }
    private string Year { get; set; }

    private List<string> Years = new() { "2024", "2025", "2026" };
    private List<string> Monthes = new() { "Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь" };

    protected override async Task OnInitializedAsync()
    {
        await LoadObjectTypes();
        await LoadObjects();
        await LoadWells();
        await LoadWellDayHistories();
        await LoadWellDayPlans();
        isLoading = false;
    }

    async Task LoadObjectTypes()
    {
        //object_types = await httpClient.GetFromJsonAsync<List<ObjectType>>("api/ObjectTypes");
        object_types = await httpClient.GetFromJsonAsync<List<ObjectType>>("https://localhost:7184/api/ObjectTypes");
    }

    async Task LoadObjects()
    {
        objects = await httpClient.GetFromJsonAsync<List<Shared.Data.Tables.Object>>("https://localhost:7184/api/Objects");
    }

    async Task LoadWells()
    {
        wells = await httpClient.GetFromJsonAsync<List<Well>>("https://localhost:7184/api/Wells");
    }

    async Task LoadWellDayHistories()
    {
        well_day_histories = await httpClient.GetFromJsonAsync<List<WellDayHistory>>("https://localhost:7184/api/WellDayHistories");
    }

    async Task LoadWellDayPlans()
    {
        well_day_plans = await httpClient.GetFromJsonAsync<List<WellDayPlan>>("https://localhost:7184/api/WellDayPlans");
    }


    private void OnFilterChange()
    {

    }
}
